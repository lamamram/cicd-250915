variables:
  MAVEN_VERSION: 3.9.11-eclipse-temurin-21
  MAVEN_OPTS: -Dmaven.repo.local=$CI_PROJECT_DIR/.m2/repository
  MAVEN_ARGS: >
              -s settings.xml
              -Pdefault
              -Dorg.slf4j.simpleLogger.defaultLogLevel=error
  GET_OFFLINE: "-o"
  TRIGGER_CACHE: "on"

image: maven:${MAVEN_VERSION}

## gestion de dépendances
# 1. déporter l'installation des dépendances dans un job inital
# 2. créer un cache dans gitlab à partir du dossier contenant les dépendances
# 2b. réutiliser le cache pour le job test et tous les jobs suivants utilisant maven
# 3. si le cache est valide (si les denpendances n'ont pas changé) => je n'exécute pas le job initial
# 3b: si le cache est supprimé en dehors du CI/CD => je me donne une procédure manuelle pour exécuter le job initial

stages:
  - building
  - testing


build:
  stage: building
  tags:
    - formation
  before_script:
    - cd java_sb
  script:
    # il faut exécuter test pour forcer le téléchargement des plugins de test
    - mvn test
  cache:
    key: deps
    policy: push
    paths:
      - .m2/repository
  # règles d'exécution du job
  # chaque règle VRAIE rend le job exécuté => OU logique
  rules:
    # si toutes les clauses (ici changes et when) sont vraies alors la règle est Vraie => ET logique
    - changes:
        - java_sb/pom.xml
      # s'exécute le job précédent en succès (vraie par défaut)
      # when: on_success
    - if: $TRIGGER_CACHE == "on"

test:
  stage: testing
  tags:
    - formation
  before_script:
    - cd java_sb
  script:
    - mvn test $GET_OFFLINE
    # - mvn test
  cache:
    key: deps
    policy: pull
    untracked: true